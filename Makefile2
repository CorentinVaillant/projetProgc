# Compileur
CC = gcc
# Flags compileur 
CCFLAGS = -Wall -g 
# Debogueur
DEBOGUEUR = gdb

# Dossiers
FICHIERSRC1 = src1
FICHIERSRC2 = src2
FICHIERCOMPIL = compil

# Fichiers compile
SOURCES1 = identite.c
SOURCES2 =testgenea.c genea.c

SOURCES = $(patsubst %.c,$(FICHIERSRC1)/%.c,identite.c) $(patsubst %.c,$(FICHIERSRC2)/%.c,testgenea.c genea.c)

# Fichier objet
OBJECTS = $(patsubst %.c,$(FICHIERCOMPIL)/%.o,$(SOURCES1) $(SOURCES2))
# Nom executable
EXECUTABLE = $(FICHIERCOMPIL)/testgenea.out


all: $(EXECUTABLE)


valgrind: $(EXECUTABLE)
	valgrind -s --leak-check=full $(EXECUTABLE)


run : $(EXECUTABLE)
	@echo run $(EXECUTABLE)
	@./$(EXECUTABLE)

debug : $(EXECUTABLE)
	@gdb $(EXECUTABLE)

# cr√©ation des executables
$(EXECUTABLE): $(OBJECTS)
	@mkdir -p $(FICHIERCOMPIL)
	@echo $(OBJECTS)
	$(CC) $(CCFLAGS) $(OBJECTS) -o $@
	# $(CC) $(CCFLAGS) $^ -o $@

# compilation des objets
$(FICHIERCOMPIL)/%.o: $(FICHIERSRC1)/%.c
	@mkdir -p $(FICHIERCOMPIL)
	$(CC) $(CCFLAGS) -c $< -o $@

$(FICHIERCOMPIL)/%.o: $(FICHIERSRC2)/%.c
	@mkdir -p $(FICHIERCOMPIL)
	$(CC) $(CCFLAGS) -c $< -o $@



# nettoyage
clear:
	@echo nettoyage
	@rm -rf $(FICHIERCOMPIL) 
